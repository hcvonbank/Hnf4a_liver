mydata <- read_csv("cleanup/combined_pmol_mg_tissue.csv")
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(reshape)){install.packages("reshape")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggrepel)){install.packages("ggrepel")}
if(!require(ggsci)){install.packages("ggsci")}
if(!require(scales)){install.packages("scales")}
if(!require(heatmaply)){install.packages("heatmaply")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(factoextra)){install.packages("factoextra")}
if(!require(RColorBrewer)){install.packages("RColorBrewer")}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(reshape)){install.packages("reshape")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggforce)){install.packages("ggforce")}
library(forcats)
mydata <- read_csv("cleanup/combined_pmol_mg_tissue.csv")
mydata[mydata == 0] <- NA
mydata<- mydata %>%
unite("Condition",2:3,remove=T)
mydata$Condition <- gsub("HNF4a ", "", mydata$Condition)
mydata1 <- mydata[-c(3)] #remove tissue weight
mydata1
df <- read_csv("cleanup/Jain_2022_liver.csv")
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(reshape)){install.packages("reshape")}
if(!require(reshape)){install.packages("reshape2")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggrepel)){install.packages("ggrepel")}
if(!require(ggsci)){install.packages("ggsci")}
if(!require(scales)){install.packages("scales")}
if(!require(heatmaply)){install.packages("heatmaply")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(factoextra)){install.packages("factoextra")}
if(!require(RColorBrewer)){install.packages("RColorBrewer")}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(reshape)){install.packages("reshape")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggforce)){install.packages("ggforce")}
library(forcats)
df <- read_csv("cleanup/Jain_2022_liver.csv")
View(df)
df <- df[,-c(3:5)]
df_ether <- df %>% select(grep("Temp", names(df)), grep("Ether", names(df)))
df_ether$Temp <- as.factor(df_ether$Temp)
df_ether <- as.data.frame(df_ether)
ether_2 <- melt(df_ether[,c(1:35)],id.vars = 1, variable_name = "species")
View(ether_2)
a = "species"
# Define y-axis variable
b = "value"
# Define additional variable related to color (if none, set equal to a)
c = "Temp"
ether_2$Temp = factor(ether_2$Temp, levels = c("RT", "Cold"), ordered = TRUE)
p0 <- ggbarplot(ether_2, x = a, y = b,
add = c("mean_se"), color = "black", fill = c,
add.params = list(width = 0.35, binwidth = 0.07),
alpha = 0.5, position = position_dodge(0.8), size = .5)
p1 <- ggpar(p0, legend = "right", palette = c("white","black"), legend.title = c,
xlab = F, ylab = "Normalized Abundance") +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=60, hjust=1, size = 8))
print(p1)
df_ether_sum <- mutate(df_ether, Total = rowSums(df_ether[,c(2:35)]))
sum_graph <- df_ether_sum[c(1,36)]
sum_graph$Temp = factor(sum_graph$Temp, levels = c("RT", "Cold"), ordered = TRUE)
a = "Temp"
b = "Total"
p <- ggbarplot(sum_graph, x = a, y = b,
add = c("mean_se"), color = "black", fill=a,
add.params = list(width = 0.35, binwidth = 0.07),
alpha = 0.5, position = position_dodge(0.8), size = .5)
p1 <- ggpar(p, legend = "right", palette = c("white","black"), legend.title = c,
xlab = F, ylab = "Sum Normalized Abundance")
p1
stat.test <- sum_graph %>%
t_test(Total ~ Temp) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
stat.test
dfs <- read_csv("cleanup/combined_pmol_mg_tissue.csv")
dfs <- dfs %>%
unite("Condition",2:3,remove=T)
dfs$Condition <- as.factor(dfs$Condition)
ePE <- dfs %>% select(grep("Condition", names(dfs)), grep("EtherPE", names(dfs)))
ePC <- dfs %>% select(grep("Condition", names(dfs)), grep("EtherPC", names(dfs)))
rm(list=ls())
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(reshape)){install.packages("reshape")}
if(!require(reshape)){install.packages("reshape2")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggrepel)){install.packages("ggrepel")}
if(!require(ggsci)){install.packages("ggsci")}
if(!require(scales)){install.packages("scales")}
if(!require(heatmaply)){install.packages("heatmaply")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(factoextra)){install.packages("factoextra")}
if(!require(RColorBrewer)){install.packages("RColorBrewer")}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(reshape)){install.packages("reshape")}
if(!require(Cairo)){install.packages("Cairo")}
if(!require(ggpubr)){install.packages("ggpubr")}
if(!require(rstatix)){install.packages("rstatix")}
if(!require(ggforce)){install.packages("ggforce")}
library(forcats)
dfs <- read_csv("cleanup/combined_pmol_mg_tissue.csv")
dfs <- dfs %>%
unite("Condition",2:3,remove=T)
dfs$Condition <- as.factor(dfs$Condition)
ether <- dfs %>% select(grep("Condition", names(dfs)), grep("Ether", names(dfs)))
ether
ether <- ether[,-7]
ether
ether <- as.data.frame(ether)
ether
ether_2 <- melt(ether[,c(1:n)],id.vars = 1, variable_name = "lipid")
ether_2 <- melt(ether,id.vars = 1, variable_name = "lipid")
ether_2
a = "lipid"
# Define y-axis variable
b = "value"
# Define additional variable related to color (if none, set equal to a)
c = "Condition"
ether_2$Condition = factor(ether_2$Condition, levels = c("Control_RT", "HNF4a KO_RT", "Control_cold","HNF4a KO_cold"), ordered = TRUE)
p0 <- ggbarplot(ether_2, x = a, y = b,
add = c("mean_se"), color = "black", fill = c,
add.params = list(width = 0.35, binwidth = 0.07),
alpha = 0.5, position = position_dodge(0.8), size = .5)
p1 <- ggpar(p0, palette = c("#fdae61","#d7191c","#abd9e9","#2c7bb6"), legend = "right", legend.title = c,
xlab = F, ylab = "Abundance (pmol/mg tissue)") +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=60, hjust=1, size = 12))
print(p1)
ether_2
stat.test <- ether_2 %>%
group_by(lipid) %>%
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
View(stat.test)
stat.test <- stat.test %>% add_xy_position(fun = "mean_sd", x="lipid")
stat.test$p.adj.signif <- stat.test$p.signif
p3 <- p1 + stat_pvalue_manual(
stat.test, hide.ns = T)
p3
ether_RT <- ether_2 %>% select(grep("RT"), ether_2$Condition)
ether_RT <- ether_2 %>% filter(str_detect(Condition,"RT"))
ether_cold <- ether_2 %>% filter(str_detect(Condition,"cold"))
p0 <- ggbarplot(ether_RT, x = a, y = b,
add = c("mean_se"), color = "black", fill = c,
add.params = list(width = 0.35, binwidth = 0.07),
alpha = 0.5, position = position_dodge(0.8), size = .5)
p0
p1 <- ggpar(p0, palette = c("#fdae61","#d7191c"), legend = "right", legend.title = c,
xlab = F, ylab = "Abundance (pmol/mg tissue)") +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=60, hjust=1, size = 12))
print(p1)
stat.test <- ether_2 %>%
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
stat.test <- stat.test %>% add_xy_position(fun = "mean_sd", x="lipid")
stat.test$p.adj.signif <- stat.test$p.signif
p3 <- p1 + stat_pvalue_manual(
stat.test, hide.ns = T)
p3
stat.test
View(stat.test)
print(p1)
stat.test <- ether_2 %>%
group_by("lipid")
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
stat.test <- ether_2 %>%
group_by(lipid)
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
stat.test <- ether_2 %>%
group_by(lipid)
t_test(value ~ Condition)
ether_RT
stat.test <- ether_2 %>%
group_by(lipid)
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
ether_2
ether_2 <- ungroup(ether_2)
stat.test <- ether_2 %>%
group_by(lipid)
t_test(value ~ Condition) %>%
adjust_pvalue(method = "none") %>%
add_significance("p")
ether_2
